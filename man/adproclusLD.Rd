% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{adproclusLD}
\alias{adproclusLD}
\title{Low dimensional ADPROCLUS}
\usage{
adproclusLD(
  data,
  nclusters,
  ncomponents,
  start_allocation = NULL,
  nrandomstart = 3,
  nsemirandomstart = 3,
  saveAllStarts = FALSE,
  seed = NULL
)
}
\arguments{
\item{data}{Object-by-variable data matrix of class \code{matrix} or
\code{data.frame}.}

\item{nclusters}{Number of clusters to be used. Must be a positive integer.}

\item{ncomponents}{Number of components (dimensions) to which the profiles should be restricted. Must be a positive integer.}

\item{start_allocation}{Optional matrix of binary values as starting allocation for first run. Default is \code{NULL}.}

\item{nrandomstart}{Number of random starts (see \code{\link{getRandom}}). Can be zero. Increase for better results, though longer computation time.
Some research finds 500 starts to be a useful reference.}

\item{nsemirandomstart}{Number of semi-random starts (see \code{\link{getSemiRandom}})). Can be zero. Increase for better results, though longer computation time.
Some research finds 500 starts to be a useful reference.}

\item{saveAllStarts}{logical. If \code{TRUE}, the results of all algorithm
starts are returned. By default, only the best solution is retained.}

\item{seed}{Integer. Seed for the random number generator. Default: NULL, meaning no reproducibility}
}
\value{
\code{adproclusLD} returns a list with the following
  components, which describe the best model (from the multiple starts): \describe{
  \item{\code{model}}{matrix. The obtained overlapping clustering model \eqn{\boldsymbol{M}} of the same size as \code{data}.}
  \item{\code{model_lowdim}}{matrix. The obtained low dimensional clustering model \eqn{\boldsymbol{AC}}
  of size \eqn{I \times S}}
  \item{\code{A}}{matrix. The membership matrix \eqn{\boldsymbol{A}} of the clustering model.}
  \item{\code{P}}{matrix. The profile matrix \eqn{\boldsymbol{P}} of the clustering model.}
  \item{\code{c}}{matrix. The profile values in terms of the low dimensional components.}
  \item{\code{B}}{matrix. Base vectors connecting low dimensional components with original variables.
  Variables-by-components matrix. Warning: for computing \eqn{\boldsymbol{P}} use \eqn{\boldsymbol{B'}}}
  \item{\code{sse}}{numeric. The
  residual sum of squares of the clustering model, which is minimized by the
  ALS algorithm.}
  \item{\code{totvar}}{numeric. The total sum of squares
  of \code{data}.}
  \item{\code{explvar}}{numeric. The proportion of variance
  in \code{data} that is accounted for by the clustering model.}
  \item{\code{iterations}}{numeric. The number of iterations of the algorithm.}
  \item{\code{timer}}{numeric. The amount of time (in seconds) the algorithm
  ran for.}
  \item{\code{initialStart}}{list. A list containing the initial
  membership matrix, as well as the type of start that was used
  to obtain the clustering solution. (as returned by \code{\link{getRandom}}
  or \code{\link{getSemiRandom}})}
  \item{\code{runs}}{list. Each element represents one model obtained from one of the multiple starts.
  Each element contains all of the above information.}
  \item{\code{parameters}}{list. Containing the parameters used for the model.}}
}
\description{
Perform \strong{low dimensional} additive profile clustering (ADPROCLUS) on object by variable data.
Use case: data to cluster consists of a large set of variables, where it can be useful to interpret
the cluster profiles in terms of a smaller set of components that represent the original variables well.
}
\details{
In this function, an extension by Depril et al. (2012) of Mirkins (1987, 1990) additive profile clustering
method is used to obtain a low dimensional overlapping clustering model of the object by variable data provided by \code{data}.
More precisely, the low dimensional ADPROCLUS model approximates an \eqn{I \times J} object by
variable data matrix \eqn{\boldsymbol{X}} by an \eqn{I \times J} model matrix
\eqn{\boldsymbol{M}}. For \eqn{K} overlapping clusters, \eqn{\boldsymbol{M}} can be decomposed into an \eqn{I \times K} binary
cluster membership matrix \eqn{\boldsymbol{A}} and a \eqn{K \times J} real-valued cluster profile matrix \eqn{\boldsymbol{P}} s.t.
\deqn{M = AP.}
With the simultaneous dimension reduction, \eqn{\boldsymbol{P}} is restricted to be
of reduced rank \eqn{S < \min(K,J)}, such that it can be decomposed into \deqn{P = CB',}
with \eqn{\boldsymbol{C}} a \eqn{K \times S} matrix and \eqn{\boldsymbol{B}} a \eqn{J \times S} matrix. Now,
a row in \eqn{\boldsymbol{C}} represents the profile values associated with the respective cluster in terms of the \eqn{S} components, while
the entries of \eqn{\boldsymbol{B}} can be used to interpret the components in terms of the complete set of variables.
In particular, the aim of an ADPROCLUS
analysis is therefore, given a number of clusters \eqn{K} and a number of dimensions \eqn{S}, to estimate a
model matrix \eqn{\boldsymbol{M}} that reconstructs data matrix
\eqn{\boldsymbol{X}} as close as possible in a least squares sense and simultaneously reduce the dimensions of the data.
For a detailed illustration of the low dimensional ADPROCLUS model and associated
loss function, see Depril et al. (2012).

\strong{Warning:} Computation time increases exponentially with increasing
number of clusters, \eqn{K}. We recommend to determine the computation time
of a single start for each specific dataset and \eqn{K} before employing a
multistart procedure.
}
\examples{
# Loading a test dataset into the global environment
x <- ADPROCLUS::CGdata

# Low dimensional clustering with K = 3 clusters
# where the resulting profiles can be characterized in S = 1 dimensions (components)
clust <- adproclusLD(x, nclusters = 3, ncomponents = 1)

}
\references{
Depril, D., Van Mechelen, I., & Wilderjans, T. F.
  (2012). Lowdimensional additive overlapping clustering.
  \emph{Journal of classification, 29,} 297-320.
}
\seealso{
\code{\link{adproclus}} for full dimensional ADPROCLUS, \code{\link{getRandom}},\code{\link{getSemiRandom}} and \code{\link{getRational}} for generating
  (semi-)random and rational starts for (low dimensional) ADPROCLUS.
}
