% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize.R
\name{plotClusterNetwork}
\alias{plotClusterNetwork}
\title{Network plot of a (low dimensional) ADPROCLUS solution}
\usage{
plotClusterNetwork(
  model,
  cluster_names = NULL,
  component_names = NULL,
  relative_overlap = TRUE,
  vertex_color = "antiquewhite",
  edge_color_low = "lavenderblush2",
  edge_color_high = "lavenderblush4"
)
}
\arguments{
\item{model}{ADPROCLUS solution (class: \code{adpc}). Low dimensional model possible.}

\item{cluster_names}{Names of the clusters as list. OPTIONAL}

\item{component_names}{Names of the variables (components if low dim model) as list. OPTIONAL}

\item{relative_overlap}{Boolean value. If \code{TRUE} (default), the number of observations belonging to two clusters
is divided by the total number of observations. If \code{FALSE}
the number of observations in a cluster overlap will be displayed on the edges.}

\item{vertex_color}{Color of the vertices as string. OPTIONAL}

\item{edge_color_low}{Lower end of color spectrum for edges as string. OPTIONAL}

\item{edge_color_high}{Upper end of color spectrum for edges as string. OPTIONAL}
}
\value{
Invisibly returns the input model.
}
\description{
Produce a representation of a (low dimensional) ADPROCLUS solution, where each cluster is a vertex and
the edge between two vertices represents the overlap between the corresponding clusters.
The size of a vertex corresponds to the cluster size. The overlap is represented
through color, width and numerical label of the edge.
The numerical edge-labels can be relative (number of overlap observations / total observations)
or absolute (number of observations in both clusters).
\strong{NOTE:} This function can be called through the \code{plot(model, type = "Network")} function.
}
\examples{
# Loading a test dataset into the global environment
x <- ADPROCLUS::CGdata[1:100,]

# Quick low dimensional clustering with K = 3 clusters and S = 1 dimensions
clust <- adproclusLD(x, 3, 1)

# Plot the overlapping the clusters
plotClusterNetwork(clust)
}
